"use strict";(self.webpackChunkmemoire=self.webpackChunkmemoire||[]).push([[474],{"./src/app/_components/atoms/StyledButton/StyledButton.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>StyledButton_stories});var jsx_runtime=__webpack_require__("./node_modules/.pnpm/next@14.1.4_@babel+core@7.12.3_react-dom@18.2.0_react@18.2.0/node_modules/next/dist/compiled/react/jsx-runtime.js");__webpack_require__("./node_modules/.pnpm/next@14.1.4_@babel+core@7.12.3_react-dom@18.2.0_react@18.2.0/node_modules/next/dist/compiled/react/index.js");const StyledButton=({onClick,text,className})=>(0,jsx_runtime.jsx)("button",{className:`_1o3g5an0 ${className}`,onClick,children:text}),StyledButton_StyledButton=StyledButton;try{StyledButton.displayName="StyledButton",StyledButton.__docgenInfo={description:"기본 스타일 버튼 컴포넌트",displayName:"StyledButton",props:{text:{defaultValue:null,description:"버튼 텍스트",name:"text",required:!0,type:{name:"string"}},onClick:{defaultValue:null,description:"클릭 이벤트 핸들러",name:"onClick",required:!0,type:{name:"() => void"}},className:{defaultValue:null,description:"컴포넌트로 생성할 요소의 클래스명",name:"className",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/app/_components/atoms/StyledButton/StyledButton.tsx#StyledButton"]={docgenInfo:StyledButton.__docgenInfo,name:"StyledButton",path:"src/app/_components/atoms/StyledButton/StyledButton.tsx#StyledButton"})}catch(__react_docgen_typescript_loader_error){}var console=__webpack_require__("./node_modules/.pnpm/console-browserify@1.2.0/node_modules/console-browserify/index.js");const StyledButton_stories={title:"Components/StyledButton",component:StyledButton_StyledButton,argTypes:{text:{control:"text",description:"버튼에 표시될 텍스트"},onClick:{action:"clicked",description:"클릭 이벤트 핸들러"},className:{control:"text",description:"추가적인 클래스 이름"}}},Default=(args=>(0,jsx_runtime.jsx)(StyledButton_StyledButton,{...args})).bind({});Default.args={text:"Default Button",onClick:()=>console.log("Button clicked!"),className:""};const __namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"(args: StyledButtonProps) => <StyledButton {...args} />",...Default.parameters?.docs?.source}}}}}]);